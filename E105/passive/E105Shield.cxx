/* Generated by Together */
#include "E105Shield.h"
#include "FairGeoLoader.h"
#include "FairGeoInterface.h"
#include "E105GeoShield.h"
#include "FairGeoRootBuilder.h"
#include "FairGeoNode.h"
#include "FairGeoMedia.h"
#include "FairRuntimeDb.h"
#include "E105GeoPassivePar.h"
#include "TObjArray.h"
#include "TGeoPcon.h"
#include "TGeoVolume.h"
#include "TGeoMatrix.h"
#include "TGeoManager.h"
#include "TGeoCompositeShape.h"
#include "TGeoMaterial.h"
#include "TGeoMedium.h"
#include "TGeoBBox.h"
#include "TGeoTrd1.h"
#include "TGeoPgon.h"
#include "TGeoTube.h"
#include "TGeoSphere.h"
#include "TGeoArb8.h"
#include "TGeoCone.h"
#include "TGeoTorus.h"
#include "TGeoTrd2.h"
#include "TGeoBoolNode.h"
#include "TGeoCompositeShape.h"
#include "TGeoManager.h"
#include "FairRun.h"
#include "TVector3.h"


E105Shield::~E105Shield()
{
}

E105Shield::E105Shield()
  : FairModule("E105Shield", "")
{
}

E105Shield::E105Shield(const char* name, const char* title)
  : FairModule(name ,title)
{
}

void E105Shield::ConstructGeometry()
{
  // medium 
  ////////////
  TGeoElementTable *table = gGeoManager->GetElementTable();

  Double_t w       =        0.;
  Double_t a       =        0.;
  Double_t z       =        0.;
  Double_t density =        0.;
  Double_t radl    =        0.;
  Double_t absl    =        0.;
  Int_t numed      =        0 ;

  // -- Mixture: Steel
  TGeoMedium * pMedSteel=NULL;
  if (gGeoManager->GetMedium("Steel") ){
    pMedSteel=gGeoManager->GetMedium("Steel");
  }else{
    Int_t nel     = 3;
    density = 7.9;
    TGeoMixture*
      pMatSteel = new TGeoMixture("Steel", nel,density);
    a = 55.845000;   z = 26.000000;  w = 0.710000;  // Fe
    pMatSteel->DefineElement(0,a,z,w);
    a = 51.996100;   z = 24.000000;   w = 0.180000;  // Cr
    pMatSteel->DefineElement(1,a,z,w);
    a = 58.693400;   z = 28.000000;   w = 0.110000;  // Ni
    pMatSteel->DefineElement(2,a,z,w);
    pMatSteel->SetIndex(2);
    numed   = 4;  // medium number
    Double_t par[8];
    par[0]  = 0.000000; // isvol
    par[1]  = 0.000000; // ifield
    par[2]  = 0.000000; // fieldm
    par[3]  = 0.000000; // tmaxfd
    par[4]  = 0.000000; // stemax
    par[5]  = 0.000000; // deemax
    par[6]  = 0.000100; // epsil
    par[7]  = 0.000000; // stmin
    pMedSteel = new TGeoMedium("Steel", numed,pMatSteel, par );
  }

  // Geometry description
  ///////////
  Double_t mm = 0.1;
  //positioning coordinated, will be updated in the process of geometry building
  // Double_t x=(66+20.99+1) *mm;            // to put things in the right place
  // Double_t y=(-58.5)  *mm;
  // Double_t z=(-59.2+150.9+100.4/2.)  *mm; // not sure about this one yet

  // --------> 1) Horizental Pedestal
  Double_t HPx= 24.98 *mm; // to put things in the right place 
  Double_t HPy=  3.00 *mm;
  Double_t HPz= 78.00 *mm;
  TGeoShape *SHPed = new TGeoBBox("SHPed",HPx/2,HPy/2,HPz/2);
  //  TGeoVolume *SHPedv = new TGeoVolume("SHPedv",SHPed,pMedSteel);
 
  // --------> 2) Horizental Tub
  Double_t ri =  7.0 * mm;
  Double_t ro = 10.0 * mm;
  Double_t xx = -HPx/2;
  Double_t yy = ri+HPy/2;
  Double_t zz = 0;
  TGeoShape *SHTub = new TGeoTubeSeg("SHTub",ri,ro,HPz/2,180,270);
  //  TGeoVolume *SHTubv = new TGeoVolume("SHTubv",SHTub,pMedSteel); 
  TGeoCombiTrans* tr1 = new TGeoCombiTrans("tr1",xx,yy,zz,0);
  TGeoUnion* pComp1 = new TGeoUnion(SHPed,SHTub,0,tr1);
  TGeoShape *sComp1 = new TGeoCompositeShape("sComp1", pComp1);

  
  // --------> Auxiliary objects to round the sharp corners
  // Edge to be added
  Double_t scx = HPy; 
  Double_t scy = 6.0 *mm;
  Double_t scz = scy;
  Double_t ccr = scy;
  Double_t ccz = HPy;
  TGeoShape *sSB1 = new TGeoBBox("sSB1",scx/2,scy/2,scz/2);
  TGeoShape *sTB1 = new TGeoTube("sTB1",0,ccr,ccz);  
  TGeoRotation *pMatrix1 = new TGeoRotation("",180.,0.,90.,90.,90.,0.);
  TGeoCombiTrans* tr2 = new TGeoCombiTrans("tr2",0,-ccr/2,-ccr/2,pMatrix1);
  TGeoSubtraction* pAxil1 = new TGeoSubtraction(sSB1,sTB1,0,tr2);  
  TGeoShape *sAxil1 = new TGeoCompositeShape("sAxil1", pAxil1);
  // Rounder
  TGeoShape *sSB2 = new TGeoBBox("sSB2",scx/2,scy/2,scz);
  TGeoShape *sTB2 = new TGeoTube("sTB2",0,ccr,ccz*2);  
  TGeoSubtraction* pAxil2 = new TGeoSubtraction(sSB1,sTB1,0,tr2);  
  TGeoShape *sAxil2 = new TGeoCompositeShape("sAxil2", pAxil2);

  // --------> 3) Vertical Pedestal
  Double_t VPx = HPy;
  Double_t VPy = 20.0  *mm; 
  Double_t VPz = HPz;
  TGeoShape *SVPed = new TGeoBBox("SVPed",VPx/2,VPy/2,VPz/2);
  // #1 boolean
  TGeoRotation *pMatrix2 = new TGeoRotation("",90.,0.,180.,0.,90.,90.);
  TGeoCombiTrans* tr3 = 
    new TGeoCombiTrans("tr3",0,VPy/2-scz/2,-VPz/2+scz/2,pMatrix2);
  TGeoSubtraction* pSVPed1b = new TGeoSubtraction(SVPed,sAxil2,0,tr3);
  TGeoShape *sSVPed1b = new TGeoCompositeShape("sSVPed1b", pSVPed1b);
  // #2 boolean
  TGeoCombiTrans* tr31 = new TGeoCombiTrans("tr31",0,-ccr/2,VPz/2+ccr/2,pMatrix2);
  TGeoUnion* pSVPed2b = new TGeoUnion(sSVPed1b,sAxil1,0,tr31);  
  TGeoShape *sSVPed2b = new TGeoCompositeShape("sSVPed2b", pSVPed2b);
  // #3 boolean
  TGeoRotation *pMatrix21 = new TGeoRotation("",90.,0.,0.,0.,90.,270.);
  TGeoCombiTrans* tr32 = 
    new TGeoCombiTrans("tr32",0,VPy/2+ccr/2,48*mm-VPz/2-ccr/2,pMatrix21);
  TGeoUnion* pSVPed3b = new TGeoUnion(sSVPed2b,sAxil1,0,tr32);  
  TGeoShape *sSVPed3b = new TGeoCompositeShape("sSVPed3b", pSVPed3b);  
  // union with Comp1
  xx -= ri+(ro-ri)/2.;
  yy += VPy/2;
  TGeoCombiTrans* tr4 = new TGeoCombiTrans("tr2",xx,yy,zz,0);
  TGeoUnion* pComp2 = new TGeoUnion(sComp1,sSVPed3b,0,tr4);
  TGeoShape *sComp2 = new TGeoCompositeShape("sComp2", pComp2);  

  // --------> 4) First Shield
  Double_t Shi1y = 80.0 *mm;
  Double_t Shi1x = VPx;
  Double_t Shi1z = 100.4 *mm;
  TGeoShape *SShi1 = new TGeoBBox("SShi1",Shi1x/2,Shi1y/2,Shi1z/2);
  // #1 boolean
  TGeoCombiTrans* tr41 = 
    new TGeoCombiTrans("tr41",0,Shi1y/2-ccr/2,-Shi1z/2+ccr/2,pMatrix2);
  TGeoSubtraction* pSShi1b1 = new TGeoSubtraction(SShi1,sAxil2,0,tr41);
  TGeoShape *sSShi1b1 = new TGeoCompositeShape("sSShi1b", pSShi1b1);

  // union with Comp2
  yy += VPy/2+Shi1y/2-10.0*mm;
  zz += VPz/2+Shi1z/2-30.0*mm;
  TGeoCombiTrans* tr5 = new TGeoCombiTrans("tr5",xx,yy,zz,0);
  TGeoUnion* pComp3 = new TGeoUnion(sComp2,sSShi1b1,0,tr5);
  TGeoShape *sComp3 = new TGeoCompositeShape("sComp3", pComp3);  

  // --------> 5) Vertical Tube
  Double_t VTz  = Shi1y;
  Double_t phi=30;
  TGeoShape *SVTub = new TGeoTubeSeg("SVTub",ri,ro,VTz/2,180,180+phi);
  // union with Comp3
  zz += Shi1z/2;
  TGeoCombiTrans* tr6 = new TGeoCombiTrans("tr6",xx+ri+(ro-ri)/2.,yy,zz,pMatrix2);
  TGeoUnion* pComp4 = new TGeoUnion(sComp3,SVTub,0,tr6);
  TGeoShape *sComp4 = new TGeoCompositeShape("sComp4", pComp4);  

  // --------> 6) Second Shield
  Double_t Shi2x = VPx;
  Double_t Shi2y = Shi1y;
  Double_t Shi2z = 110. *mm;
  Double_t d2r = TMath::Pi()/180.;
  TGeoShape *SShi2 = new TGeoBBox("SShi2",Shi2x/2,Shi2y/2,Shi2z/2);
  // #1 boolean
  TGeoCombiTrans* tr71 = 
    new TGeoCombiTrans("tr71",0,Shi2y/2-ccr/2,Shi2z/2-ccr/2,0);
  TGeoSubtraction* pSShi2b1 = new TGeoSubtraction(SShi2,sAxil2,0,tr71);
  TGeoShape *sSShi2b1 = new TGeoCompositeShape("sSShi2b1", pSShi2b1);
  // #2 boolean
  TGeoCombiTrans* tr72 = 
    new TGeoCombiTrans("tr72",0,-Shi2y/2+ccr/2,Shi2z/2-ccr/2,pMatrix21);
  TGeoSubtraction* pSShi2b2 = new TGeoSubtraction(sSShi2b1,sAxil2,0,tr72);
  TGeoShape *sSShi2b2 = new TGeoCompositeShape("sSShi2b2", pSShi2b2);
  // union with Comp4
  xx += (0.5*(ro+ri))*(1-TMath::Cos(phi*d2r)) + Shi2z*TMath::Sin(phi*d2r)/2;
  zz += 0.5*(ro+ri)*TMath::Sin(phi*d2r) + Shi2z*TMath::Cos(phi*d2r)/2;
  TGeoRotation *pMatrix3 = new TGeoRotation("",90.+phi,0.,90.,90.,phi,0.);
  TGeoCombiTrans* tr7 = new TGeoCombiTrans("tr7",xx,yy,zz,pMatrix3);
  TGeoUnion* pComp5 = new TGeoUnion(sComp4,sSShi2b2,0,tr7);
  TGeoShape *sComp5 = new TGeoCompositeShape("sComp5", pComp5);  

  // add medium to the object
  TGeoVolume *vComp5 = new TGeoVolume("vComp5",sComp5,pMedSteel);

  // Global positioning
  ///////////////////
  TGeoVolume *pAWorld =  gGeoManager->GetTopVolume();
  // slit->SetVisibility(1);
  Double_t tx = (66+20.99+1)*0.1;           // (cm)
  Double_t ty = (-58.5)*0.1;                // (cm)
  Double_t tz = (-59.2+150.9+100.4/2.)*0.1; // (cm)
  TGeoCombiTrans *t1 = new TGeoCombiTrans("t1",tx,ty,tz,0);
  pAWorld->AddNode(vComp5, 0, t1);
}


ClassImp(E105Shield)

